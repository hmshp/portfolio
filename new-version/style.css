/* || General setup */
* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  font-family: 'Open Sans', sans-serif;
}

html {
  font-size: 16px;
  height: 100vh;
}

body {
  max-width: 100%;
  margin: 0 auto;
  height: 100%;
  position: relative;
}

/* Header */
header {
  display: flex;
  justify-content: space-between;
  padding: 0 70px; /* main 콘텐츠랑 양 옆 패딩 똑같이 70px로 줬다 */
  align-items: center;
  position: fixed;
  width: 100%;
  height: 70px;
  background-color: #eceff1;
  color: #263238;
  box-shadow: 0 0 7px rgb(0 0 0 / 20%); /* https://www.frontiersin.org/articles/10.3389/fpsyg.2020.575024/full -> 여기서 가져온 색상값인데 rgb 퍼센트(%)는 어떻게 쓰는 건지는 모르겠다 */

}

h1 {
  /* flex-grow: 1;<h1> 엘리먼트는 <header> 엘리먼트의 여유 공간을 독차지 하게 되어, 네비게이션이 우측으로 밀려나는 효과가 생기게 됩니다. */
  font-size: 2.5rem;
}

nav {
  width: 40%;
  height: 100%; /* nav의 부모인 header 높이를 지정 안해줬을 땐 %로 값 지정하면 안 먹고 픽셀로 입력할 때만 됐다. 왜냐구? 부모의 높이가 안 나와 있으니까 %(부모의 몇 % 이런 식이니까)를 쓸 수 없었던 것이다. 부모의 높이를 지정해 주니까 % 값도 잘 먹는다. width도 지정 안해줬지만 header 태그는 block element니까 가로 꽉찬 길이가 header의 길이이므로 가로값이 있다고 본 것 같다 */
}


nav a,
nav span {
  display: block;
  height: 100%;
  font-size: 2rem;
  font-weight: 600;
  text-decoration: none;
  color: #263238; /* a 태그는 기본적으로 요상한 보라색이라서 색깔 따로 안 주면 그 색 되는 듯. 그래서 header에 색 줬음에도 불구하고 여기에도 색 줬다. */
  padding: 10px;/* padding 대신 margin을 주면 margin 공간은 클릭했을 때 색이 안 변한다(당연함. element가 아니라 margin이니까) */
}


ul {
  list-style-type: none;
  height: 100%;
}

li {
  height: 100%;
  width: 100%;
  text-align: center;
}


.navbar-items {
  display: flex;
  justify-content: space-around;
}

nav a {
  font-size: 1rem;
  height: 70px;
  line-height: 40px;/* 흠 이렇게 눈대중으로 픽셀값 주는 거 맘에 안 들지만 우선 임시로 이렇게 해 놓고 넘어가자 */
}

.navbar-toggle-btn {
  position: absolute;
  right: 30px;
  display: none;
  /* width 768px 초과일 땐 안 보이게(공간 충분하니 보일 필요 없다) */
}

/* Main */

main {
  background-color: #eceff1;
  padding: 0 70px;
}

main p {
  font-size: 1.4rem;
}

#home {
  padding: 100px 0;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
}

#home p {
  font-size: 18px;
}

#home h1 {
  padding-bottom: 10px;
  font-size: 50px;
}

.home-profile-photo {
  width: 100px;
  height: 100px;
  border-radius: 50%;
  margin-bottom: 14px;
}


.contact {
  background-color:#4f5b62;
  border-radius: 4px;
  border: solid 1px lavender;
  font-size: 18px;
  cursor: pointer;
  color: white;
  padding: 4px;
}

.contact:hover {
  background-color: #000a12;
}

.home-text {
  padding-bottom: 25px;
  color: #263238;
}

.skills-lists {
  display: flex; /* 박스 만들어서 한줄에 몇 개씩 2줄로 배치하게 */
  flex-direction: row;
  justify-content: space-between;
  width: 100%;
  flex-wrap: wrap;
}

.skills-lists li {
  width: 30%;
  padding: 20px 25px;
  margin: 14px 0;
  border: 1px solid gray;
}

.skills-lists li:hover {
  background-color: blanchedalmond;
}

.item-empty {
  visibility: hidden;
  /* skills 리스트를 원하는 모양으로(그리드 형태로) 정렬하려고 하면, space-between 줬을 땐 마지막 줄 리스트 2개가 양 끝으로 가버리고(가운데 텅 빔) ::after를 줘서 content는 "", flex는 auto 주면 마지막 줄 2번째 리스트가 왼쪽 요소와 붙어버린다. 그래서 이 문제를 해결하기 위해 텅 빈 리스트를 마지막에 하나 만들고 숨겼다 */
}


.arrow-up {
  position: fixed;
  bottom: 80px;
  right: 80px;
  width: 70px;
  height: 70px;
  font-size: 50px;
  border-radius: 50%;
  border: 1px solid rgb(160, 159, 154);
  cursor: pointer;
  text-align: center;
  display: none; /* JS로 처리할 예정(처음엔 화살표 안 보이고 어느 정도 스크롤바 내린 다음에 visible 클래스 추가해서 아래에 적은 스타일 적용되게) */
}

.arrow-up.visible { /* JS로 처리할 예정(visible 클래스가 있을 때 보이게) */
  display: block;
}

/* Footer */

footer {
  background-color: #eceff1;
  padding: 5px;
  bottom: 0;
  width: 100%;
  height: 70px;
}

footer:hover {
  background-color: rgb(211, 209, 194);
  transition: transform 0.5s;
}

footer p a {
  color: black;
  text-decoration: none;
}

footer p {
  margin: 4px;
  padding-left: 10px;
}


.navbar-items li {
  cursor: pointer;
}



@media screen and (max-width: 768px) {
  .navbar-toggle-btn {
    display: block; /* 위에선 display: none; 처리했는데 width 768px 이하일 땐 보여야 하니까 */
  }

  nav {
    display: none;
  }


}